Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?


class Solution {
public:
    void setZeroes(vector<vector<int> > &matrix) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(matrix.size()==0) return ;
        if(matrix[0].size()==0) return ;
        int n=matrix.size();
        int m=matrix[0].size();
        set<int> row;
        set<int> col;
        for(int i=0;i<n;++i)
            for(int j=0;j<m;++j)
                if(matrix[i][j]==0){
                    row.insert(i);
                    col.insert(j);
                }
        for(set<int>::iterator it=row.begin();it!=row.end();++it)
            for(int j=0;j<m;++j)
                matrix[*it][j]=0;
                
        for(set<int>::iterator it=col.begin();it!=col.end();++it)
            for(int i=0;i<n;++i)
                matrix[i][*it]=0;
    }
};
